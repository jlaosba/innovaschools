@model InnovaSchools.Models.VerificarDocumentacionViewModel
@using InnovaSchools.Util

@{
    ViewBag.Title = "Actualizar Documento de Contratación";
}

<div class="jumbotron">
    <h4>ACTUALIZAR DOCUMENTO DE CONTRATACIÓN</h4>
    <hr />
    <form class="form-horizontal">
        <div class="form-inline">
            <div class="form-group">
                @Html.LabelFor(model => model.Convocatoria.ConvocatoriaCandidato.Candidato.Persona.documentoIdentidad, htmlAttributes: new { @class = "control-label", @style = "width:170px;" })
                @Html.TextBoxFor(x => x.Convocatoria.ConvocatoriaCandidato.Candidato.Persona.documentoIdentidad, new { @id = "txtDocumentoIdentidad", @class = "form-control input-sm", @style = "width:175px; border-color: red", @maxlength = "8", @disabled = "disabled" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label", @style = "width:200px;" })
                @Html.TextBoxFor(x => x.Convocatoria.ConvocatoriaCandidato.Candidato.Persona.nombre, new { @id = "txtNombre", @class = "form-control input-sm", @style = "width:175px; border-color: red", @maxlength = "15", @disabled = "disabled" })
            </div>
            <div class="form-group">
            </div>
        </div>
        <div class="form-inline">
            <div class="form-group">
                @Html.LabelFor(model => model.Convocatoria.ConvocatoriaCandidato.Candidato.Persona.apellidoPaterno, htmlAttributes: new { @class = "control-label", @style = "width:170px;" })
                @Html.TextBoxFor(x => x.Convocatoria.ConvocatoriaCandidato.Candidato.Persona.apellidoPaterno, new { @id = "txtApPaterno", @class = "form-control input-sm", @style = "width:175px; border-color: red", @maxlength = "30", @disabled = "disabled" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Convocatoria.ConvocatoriaCandidato.Candidato.Persona.apellidoMaterno, htmlAttributes: new { @class = "control-label", @style = "width:200px;" })
                @Html.TextBoxFor(x => x.Convocatoria.ConvocatoriaCandidato.Candidato.Persona.apellidoMaterno, new { @id = "txtApMaterno", @class = "form-control input-sm", @style = "width:175px; border-color: red", @maxlength = "30", @disabled = "disabled" })
            </div>
            <div class="form-group">
            </div>
        </div>
        <div class="form-inline">
            <div class="form-group">
                @Html.LabelFor(model => model.Convocatoria.ConvocatoriaCandidato.Candidato.Persona.direccion, htmlAttributes: new { @class = "control-label", @style = "width:170px;" })
                @Html.TextBoxFor(x => x.Convocatoria.ConvocatoriaCandidato.Candidato.Persona.direccion, new { @id = "txtDireccion", @class = "form-control", @style = "width:530px;", @maxlength = "50", @disabled = "disabled" })
            </div>
            <div class="form-group">
            </div>
        </div>
        <div class="form-inline">
            <div class="form-group">
                @Html.LabelFor(model => model.Convocatoria.ConvocatoriaCandidato.Candidato.Persona.telefono, htmlAttributes: new { @class = "control-label", @style = "width:170px;" })
                @Html.TextBoxFor(x => x.Convocatoria.ConvocatoriaCandidato.Candidato.Persona.telefono, new { @id = "txtTelefono", @class = "form-control", @style = "width:175px;", @maxlength = "7", @disabled = "disabled" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Convocatoria.ConvocatoriaCandidato.Candidato.Persona.celular, htmlAttributes: new { @class = "control-label", @style = "width:200px;" })
                @Html.TextBoxFor(x => x.Convocatoria.ConvocatoriaCandidato.Candidato.Persona.celular, new { @id = "txtCelular", @class = "form-control", @style = "width:175px;", @maxlength = "9", @disabled = "disabled" })
            </div>
            <div class="form-group">
            </div>
        </div>
        <div class="form-inline">
            <div class="form-group">
                @Html.Label("Puesto", htmlAttributes: new { @id = "ddlPuesto", @class = "control-label", @style = "width:170px;" })
                @Html.DropDownListFor(m => m.SelectedPuestoId, new SelectList(Model.Puestos, "Value", "Text", "0"), "--Seleccionar--", new { @class = "form-control input-sm", @style = "width:175px; border-color: red", @disabled = "disabled" })
                @Html.ValidationMessageFor(m => m.SelectedPuestoId)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Convocatoria.ConvocatoriaCandidato.Candidato.Persona.correoElectronico, htmlAttributes: new { @class = "control-label", @style = "width:200px;" })
                @Html.TextBoxFor(x => x.Convocatoria.ConvocatoriaCandidato.Candidato.Persona.correoElectronico, new { @id = "txtEmail", @class = "form-control", @style = "width:175px;", @maxlength = "10", @disabled = "disabled" })
            </div>
            <div class="form-group">
            </div>
        </div>
    </form>
    <hr style="color: #0056b2;" />
    <form class="form-horizontal" enctype="multipart/form-data" method="post" action="@Url.Action("setContrato")">
        <div class="row">
                <div class="col-md-3">
                    @Html.Label("Copia de DNI", htmlAttributes: new { @id = "lblImgDni", @class = "control-label", @style = "width:220px;" })
                </div>
                <div class="col-md-6">
                    <input id="input_folder_Dni" name="input_folder_Dni" type="file" class="filestyle" data-buttontext=" Examinar ..." data-size="sm" data-buttonname="btn-primary" data-buttonbefore="true" data-placeholder="No archivo" data-preview-file-type=".jpg">
                </div>
                <div class="col-md-1">
                    <button type="button" id="btn-verDni" class="btn btn-info btn-sm" data-toggle="modal">Ver</button>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("Declaración Jurada Domiciliaria", htmlAttributes: new { @id = "lblImgDomiciliaria", @class = "control-label", @style = "width:220px;" })
                </div>
                <div class="col-md-6">
                    <input id="input-folder-Domiciliaria" type="file" class="filestyle" data-buttontext=" Examinar ..." data-size="sm" data-buttonname="btn-primary" data-buttonbefore="true" data-placeholder="No archivo">
                </div>
                <div class="col-md-1">
                    <button type="button" id="btn-verDomicilio" class="btn btn-info btn-sm" data-toggle="modal">Ver</button>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("Antecedentes Penales", htmlAttributes: new { @id = "lblImgPenales", @class = "control-label", @style = "width:220px;" })
                </div>
                <div class="col-md-6">
                    <input id="input-folder-Penales" type="file" class="filestyle" data-buttontext=" Examinar ..." data-size="sm" data-buttonname="btn-primary" data-buttonbefore="true" multiple data-min-file-count="1" data-placeholder="No archivo">
                </div>
                <div class="col-md-1">
                    <button type="button" id="btn-verPenales" class="btn btn-info btn-sm" data-toggle="modal">Ver</button>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("Antecedentes Policiales", htmlAttributes: new { @id = "lblImgPoliciales", @class = "control-label", @style = "width:220px;" })
                </div>
                <div class="col-md-6">
                    <input id="input-folder-Policiales" type="file" class="filestyle" data-buttontext=" Examinar ..." data-size="sm" data-buttonname="btn-primary" data-buttonbefore="true" data-placeholder="No archivo">
                </div>
                <div class="col-md-1">
                    <button type="button" id="btn-verPoliciales" class="btn btn-info btn-sm" data-toggle="modal">Ver</button>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("Título Profesional", htmlAttributes: new { @id = "lblImgTitulo", @class = "control-label", @style = "width:220px;" })
                </div>
                <div class="col-md-6">
                    <input id="input-folder-Titulo" type="file" class="filestyle" data-buttontext=" Examinar ..." data-size="sm" data-buttonname="btn-primary" data-buttonbefore="true" data-placeholder="No archivo">
                </div>
                <div class="col-md-1">
                    <button type="button" id="btn-verTitulo" class="btn btn-info btn-sm" data-toggle="modal">Ver</button>
                </div>
            </div>
        <div class="form-inline">
            <div class="form-group">
                <br />
                @Html.Label(" ", htmlAttributes: new { @class = "control-label", @style = "width:140px;" })
                <input type="button" id="btn-grabar" value="Grabar" class="btn btn-success btn-sm" />
                @Html.ActionLink("Cancelar", "Index", null, null, htmlAttributes: new { @class = "btn btn-danger btn-sm" })
            </div>
            <div class="form-group">
            </div>
        </div>
    </form>
</div>

<div class="container">
    <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Mostrar Imagen</h4>
                </div>
                <div class="modal-body">
                    <p>@Html.Label("Imagen", htmlAttributes: new { @id = "lblImgUpload", @class = "control-label", @style = "width:140px;" })</p>
                    <img id="imgUp" class="img-thumbnail" alt=".." width="304" height="236">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>

</div>

@section Scripts {
    @*<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">*@
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>


    <script src="~/Scripts/bootstrap-filestyle.min.js" type="text/javascript"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            //$("#SelectedPuestoId").change(function (evt) {
            //      var value = $(this).val();
            //      if (value == 1) {
            //          $("#txtEmail").removeAttr("disabled");
            //          $("#txtEmail").css("border-color", "red");
            //      }
            //      else if (value == 2) {
            //          $("#txtEmail").val('');
            //          $("#txtEmail").attr("disabled", "disabled");
            //          $('#txtEmail').css("border-color", "lightgray");
            //      }
            //      evt.preventDefault();
            //  });
        });
        $(".input-sm").keypress(function (key) {
            window.console.log(key.charCode)
            if ((key.charCode < 97 || key.charCode > 122)//letras mayusculas
                && (key.charCode < 65 || key.charCode > 90) //letras minusculas
                && (key.charCode != 45) //retroceso
                && (key.charCode != 241) //ñ
                 && (key.charCode != 209) //Ñ
                 && (key.charCode != 32) //espacio
                 && (key.charCode != 225) //á
                 && (key.charCode != 233) //é
                 && (key.charCode != 237) //í
                 && (key.charCode != 243) //ó
                 && (key.charCode != 250) //ú
                 && (key.charCode != 193) //Á
                 && (key.charCode != 201) //É
                 && (key.charCode != 205) //Í
                 && (key.charCode != 211) //Ó
                 && (key.charCode != 218) //Ú
                )
                return false;
        });
        $("#txtDNI").on("keydown", numericTextBox);
        $("#txtTelefono").on("keydown", numericTextBox);
        $("#txtCelular").on("keydown", numericTextBox);
        function numericTextBox(e) {
            if (
                e.keyCode == 8 // backspace
                || e.keyCode == 9 // tab
                || e.keyCode == 13 // enter
                || e.keyCode == 27 // escape
                || e.keyCode == 46 // delete
                || (e.keyCode >= 35 && e.keyCode <= 39) // end, home, left arrow, up arrow, right arrow
            ) {
                return;
            }
            else {
                if (!((e.keyCode >= 48 && e.keyCode <= 57) || (e.keyCode >= 96 && e.keyCode <= 105))) {
                    // not 0-9, numpad 0-9
                    e.preventDefault();
                    return;
                }
                else {
                    var keyCode = e.keyCode;
                    if (keyCode >= 96 && keyCode <= 105) {
                        keyCode -= 48;
                    }
                    var value = $(this).val();
                    value += String.fromCharCode(keyCode);
                    value = parseInt(value, 10)
                    var maxNumber = $(this).data("maxnumber");
                    if (maxNumber) {
                        maxNumber = parseInt(maxNumber);
                        if (value > maxNumber) {
                            e.preventDefault();
                        }
                    }
                }
            }
        }

        $(function () {
            $("#btn-grabar").on("click", function () {

                var vDni = $('#txtDocumentoIdentidad').val();
                if (vDni == "") {
                    WarningMessage("Debe ingresar el DNI");
                    return;
                }

                if (vDni.length < 8) {
                    WarningMessage("Debe ingresar un DNI de 8 dígitos");
                    return;
                }

                var vNombre = $('#txtNombre').val();
                if (vNombre == "") {
                    WarningMessage("Debe ingresar el nombre");
                    return;
                }

                var vApellidoPaterno = $('#txtApPaterno').val();
                if (vApellidoPaterno == "") {
                    WarningMessage("Debe ingresar el Apellido Paterno");
                    return;
                }

                var vApellidoMaterno = $('#txtApMaterno').val();
                if (vApellidoMaterno == "") {
                    WarningMessage("Debe ingresar el Apellido Materno");
                    return;
                }
                debugger;
                var vCelular = $('#txtCelular').val();
                var vTelefono = $('#txtTelefono').val();
                var vDireccion = $('#txtDireccion').val();

                var vIdPuesto = $('#SelectedPuestoId').val();
                if (vIdPuesto == 0) {
                    WarningMessage("Debe seleccionar un puesto");
                    return;
                }

                var vEmail = $('#txtEmail').val();

                //if (vIdPuesto == "1" && vEmail.length == 0) {
                //    WarningMessage("Debe ingresar el número de Brevete");
                //    return;
                //}              

                var vRutaImgDni = $('#input_folder_Dni').val();
                var vRutaImgDomiciliaria = $('#input-folder-Domiciliaria').val();
                var vRutaImgPenales = $('#input-folder-Penales').val();
                var vRutaImgPoliciales = $('#input-folder-Policiales').val();
                var vRutaImgtitulo = $('#input-folder-Titulo').val();

                //var flDni = (DateTime.Now.ToString("yyyyMMddHHmmss") + "-" + file.FileName).ToLower();
                //file.SaveAs(Server.MapPath("~/Uploads/" + flDni));

                switch (vIdPuesto) {
                    case 1:
                        var vImgDni = $('#input_folder_Dni').val();
                        if (vImgDni == "" && vImgDni != "No archivo") {
                            WarningMessage("Debe de subir una copia del DNI");
                            return;
                        }
                        break;
                    case 2:
                        var vCelular = $('#txtCelular').val();
                        break;
                    case 3:
                        var vCelular = $('#txtCelular').val();
                        break;
                    case 4:
                        var vCelular = $('#txtCelular').val();
                        break;
                }

                //var formData = new FormData();
                //formData.append('file', $('#input_folder_Dni')[0].files[0]);

                var formData = new FormData();
                var totalFiles = document.getElementById("input_folder_Dni").files.length;
                for (var i = 0; i < totalFiles; i++)
                {
                    var file = document.getElementById("input_folder_Dni").files[i];

                    formData.append("FileUpload", file);
                }

                //////$.ajax({
                //////    type: "POST",
                //////    url: "/VerificarDocumentacion/Upload",
                //////    data: formData,
                //////    dataType: 'json',
                //////    contentType: false,
                //////    processData: false,
                //////    success: function (response) {
                //////        alert('succes!!');
                //////    },
                //////    error: function (error) {
                //////        alert("errror");
                //////    }
                //////});


                $.ajax({
                    url: "/VerificarDocumentacion/setContrato",
                    data: {
                        'pDni': vDni, 'pNombre': vNombre, 'pApePaterno': vApellidoPaterno, 'pApeMaterno': vApellidoMaterno,
                        'pCelular': vCelular, 'pTelefono': vTelefono, 'pDireccion': vDireccion, 'pIdPuesto': vIdPuesto, 'pEmail': vEmail,
                        'pRutaImgDni': vRutaImgDni, 'pRutaImgDomiciliaria': vRutaImgDomiciliaria, 'pRutaImgPenales': vRutaImgPenales,
                        'pRutaImgPoliciales': vRutaImgPoliciales, 'pRutaImgtitulo': vRutaImgtitulo
                        },
                    async: false,
                    success: function (data) {
                        if (data) {
                            $("#btn-grabar").attr("disabled", "disabled");
                            WarningMessage("Se modifico contrato");
                        } else {
                            WarningMessage("No se realizo la modificaciones");
                        }
                    },
                    error: function (ex) {
                        console.log(ex);
                    },
                    complete: function (xhr, textStatus) {

                    }
                });



            });
        });

        function fileOnload(e) {
            var result = e.target.result;
            $('#imgUp').attr("src", result);
            $("#myModal").modal();
        }
        $('#btn-verDni').click(function (e) {
            var reader = new FileReader();
            reader.onload = fileOnload;
            var file = $('#input_folder_Dni')[0].files[0]
            reader.readAsDataURL(file);
            $("#lblImgUpload").text($('#lblImgDni').text());
        });
        $('#btn-verDomicilio').click(function (e) {
            var reader = new FileReader();
            reader.onload = fileOnload;
            var file = $('#input-folder-Domiciliaria')[0].files[0]
            reader.readAsDataURL(file);
            $("#lblImgUpload").text($('#lblImgDomiciliaria').text());
        });
        $('#btn-verPenales').click(function (e) {
            var reader = new FileReader();
            reader.onload = fileOnload;
            var file = $('#input-folder-Penales')[0].files[0]
            reader.readAsDataURL(file);
            $("#lblImgUpload").text($('#lblImgPenales').text());
        });
        $('#btn-verPoliciales').click(function (e) {
            var reader = new FileReader();
            reader.onload = fileOnload;
            var file = $('#input-folder-Policiales')[0].files[0]
            reader.readAsDataURL(file);
            $("#lblImgUpload").text($('#lblImgPoliciales').text());
        });
        $('#btn-verTitulo').click(function (e) {
            var reader = new FileReader();
            reader.onload = fileOnload;
            var file = $('#input-folder-Titulo')[0].files[0]
            reader.readAsDataURL(file);
            $("#lblImgUpload").text($('#lblImgTitulo').text());
        });

        $('#input-folder-Dni').change(function (e) {
            addImage(e);
        });
        function addImage(e) {
            var file = e.target.files[0];
            imageType = '/*.jpg/';
            if (!file.type.match(imageType))
                return;
        }
    </script>
}