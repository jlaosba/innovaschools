@model InnovaSchools.Models.GenerarContratoViewModel
@using InnovaSchools.Util

@{
    ViewBag.Title = "Agregar Información de Contrato";
}

<div class="jumbotron">
    <h4>ACTUALIZAR DOCUMENTO DE CONTRATACIÓN</h4>
    <hr />
    <form class="form-horizontal">
        <div class="form-inline">
            <div class="form-group">
                @Html.LabelFor(model => model.Contrato.idContrato, htmlAttributes: new { @class = "control-label", @style = "width:170px;" })
                @Html.TextBoxFor(x => x.Contrato.idContrato, new { @id = "txtIdContarto", @class = "form-control input-sm", @style = "width:175px;", @maxlength = "8", @disabled = "disabled" })
            </div>
            <div class="form-group">
            </div>
            <div class="form-group">
            </div>
        </div>
        <div class="form-inline">
            <div class="form-group">
                @Html.LabelFor(model => model.Candidato.Persona.documentoIdentidad, htmlAttributes: new { @class = "control-label", @style = "width:170px;" })
                @Html.TextBoxFor(x => x.Candidato.Persona.documentoIdentidad, new { @id = "txtDNI", @class = "form-control input-sm", @style = "width:175px;", @maxlength = "8", @disabled = "disabled" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Candidato.Persona.nombre, htmlAttributes: new { @class = "control-label", @style = "width:200px;" })
                @Html.TextBoxFor(x => x.Candidato.Persona.nombre, new { @id = "txtNombre", @class = "form-control input-sm", @style = "width:175px;", @maxlength = "15", @disabled = "disabled" })
            </div>
            <div class="form-group">
            </div>
        </div>
        <div class="form-inline">
            <div class="form-group">
                @Html.LabelFor(model => model.Candidato.Persona.apellidoPaterno, htmlAttributes: new { @class = "control-label", @style = "width:170px;" })
                @Html.TextBoxFor(x => x.Candidato.Persona.apellidoPaterno, new { @id = "txtApPaterno", @class = "form-control input-sm", @style = "width:175px;", @maxlength = "30", @disabled = "disabled" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Candidato.Persona.apellidoMaterno, htmlAttributes: new { @class = "control-label", @style = "width:200px;" })
                @Html.TextBoxFor(x => x.Candidato.Persona.apellidoMaterno, new { @id = "txtApMaterno", @class = "form-control input-sm", @style = "width:175px;", @maxlength = "30", @disabled = "disabled" })
            </div>
            <div class="form-group">
            </div>
        </div>        
        <div class="form-inline">
            <div class="form-group">
                @Html.Label("Puesto", htmlAttributes: new { @id = "ddlPuesto", @class = "control-label", @style = "width:170px;" })
                @Html.DropDownListFor(m => m.SelectedPuestoId, new SelectList(Model.Puestos, "Value", "Text", "0"), "--Seleccionar--", new { @class = "form-control input-sm", @style = "width:175px;", @disabled = "disabled" })
                @Html.ValidationMessageFor(m => m.SelectedPuestoId)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Candidato.Persona.correoElectronico, htmlAttributes: new { @class = "control-label", @style = "width:200px;" })
                @Html.TextBoxFor(x => x.Candidato.Persona.correoElectronico, new { @id = "txtEmail", @class = "form-control", @style = "width:175px;", @maxlength = "10", @disabled = "disabled" })
            </div>
            <div class="form-group">
            </div>
        </div>
        <div class="form-inline">
            <div class="form-group">
                @Html.LabelFor(model => model.Contrato.fechaIngreso, htmlAttributes: new { @class = "control-label", @style = "width:170px;" })
                @Html.TextBox("ddlFecha_ingreso", "", new { @class = "date-picker", @style = "border-color: red" })
                @Html.ValidationMessageFor(model => model.Contrato.fechaIngreso, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Contrato.fechaCese, htmlAttributes: new { @class = "control-label", @style = "width:200px;" })
                @Html.TextBox("ddlFecha_cese", "", new { @class = "date-picker", @style = "border-color: red" })
                @Html.ValidationMessageFor(model => model.Contrato.fechaCese, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
            </div>
        </div>        
        <div class="form-inline">
            <div class="form-group">
                <br />
                @Html.Label(" ", htmlAttributes: new { @class = "control-label", @style = "width:140px;" })
                <input type="button" id="btn-grabar" value="Grabar" class="btn btn-success btn-sm" />
                @Html.ActionLink("Cancelar", "Index", null, null, htmlAttributes: new { @class = "btn btn-danger btn-sm" })
            </div>
            <div class="form-group">
            </div>
        </div>
    </form>    
</div>

@section Scripts {
    @*<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">*@
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>


    <script src="~/Scripts/bootstrap-filestyle.min.js" type="text/javascript"></script>
    <script src="//code.jquery.com/ui/1.10.4/jquery-ui.js"></script>
    <script src="~/Scripts/jquery.maskedinput.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $.datepicker.regional['es'] = {
                closeText: 'Cerrar',
                prevText: '<Ant',
                nextText: 'Sig>',
                currentText: 'Hoy',
                monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
                monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
                dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
                dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mié', 'Juv', 'Vie', 'Sáb'],
                dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sá'],
                weekHeader: 'Sm',
                dateFormat: 'dd/mm/yy',
                firstDay: 1,
                isRTL: false,
                showMonthAfterYear: false,
                yearSuffix: ''
            };
            $.datepicker.setDefaults($.datepicker.regional['es']);

            $("#ddlFecha_ingreso").datepicker({
                minDate: new Date(),
                onClose: function (selectedDate) {
                    $("#ddlFecha_cese").datepicker("option", "minDate", selectedDate);
                },
            });

            $("#ddlFecha_cese").datepicker({
                onClose: function (selectedDate) {
                    $("#ddlFecha_ingreso").datepicker("option", "maxDate", selectedDate);
                }
            });
            $("#ddlFecha_ingreso").datepicker({ dateFormat: "dd/mm/yy" }).mask("99/99/9999");
            $("#ddlFecha_cese").datepicker({ dateFormat: "dd/mm/yy" }).mask("99/99/9999");
        });
        $(".input-sm").keypress(function (key) {
            window.console.log(key.charCode)
            if ((key.charCode < 97 || key.charCode > 122)//letras mayusculas
                && (key.charCode < 65 || key.charCode > 90) //letras minusculas
                && (key.charCode != 45) //retroceso
                && (key.charCode != 241) //ñ
                 && (key.charCode != 209) //Ñ
                 && (key.charCode != 32) //espacio
                 && (key.charCode != 225) //á
                 && (key.charCode != 233) //é
                 && (key.charCode != 237) //í
                 && (key.charCode != 243) //ó
                 && (key.charCode != 250) //ú
                 && (key.charCode != 193) //Á
                 && (key.charCode != 201) //É
                 && (key.charCode != 205) //Í
                 && (key.charCode != 211) //Ó
                 && (key.charCode != 218) //Ú
                )
                return false;
        });
        $("#txtDNI").on("keydown", numericTextBox);
        $("#txtTelefono").on("keydown", numericTextBox);
        $("#txtCelular").on("keydown", numericTextBox);
        function numericTextBox(e) {
            if (
                e.keyCode == 8 // backspace
                || e.keyCode == 9 // tab
                || e.keyCode == 13 // enter
                || e.keyCode == 27 // escape
                || e.keyCode == 46 // delete
                || (e.keyCode >= 35 && e.keyCode <= 39) // end, home, left arrow, up arrow, right arrow
            ) {
                return;
            }
            else {
                if (!((e.keyCode >= 48 && e.keyCode <= 57) || (e.keyCode >= 96 && e.keyCode <= 105))) {
                    // not 0-9, numpad 0-9
                    e.preventDefault();
                    return;
                }
                else {
                    var keyCode = e.keyCode;
                    if (keyCode >= 96 && keyCode <= 105) {
                        keyCode -= 48;
                    }
                    var value = $(this).val();
                    value += String.fromCharCode(keyCode);
                    value = parseInt(value, 10)
                    var maxNumber = $(this).data("maxnumber");
                    if (maxNumber) {
                        maxNumber = parseInt(maxNumber);
                        if (value > maxNumber) {
                            e.preventDefault();
                        }
                    }
                }
            }
        }

        $(function () {
            $("#btn-grabar").on("click", function () {

                var vDni = $('#txtDNI').val();
                if (vDni == "") {
                    WarningMessage("Debe ingresar el DNI");
                    return;
                }

                if (vDni.length < 8) {
                    WarningMessage("Debe ingresar un DNI de 8 dígitos");
                    return;
                }

                var vNombre = $('#txtNombre').val();
                if (vNombre == "") {
                    WarningMessage("Debe ingresar el nombre");
                    return;
                }

                var vApellidoPaterno = $('#txtApPaterno').val();
                if (vApellidoPaterno == "") {
                    WarningMessage("Debe ingresar el Apellido Paterno");
                    return;
                }

                var vApellidoMaterno = $('#txtApMaterno').val();
                if (vApellidoMaterno == "") {
                    WarningMessage("Debe ingresar el Apellido Materno");
                    return;
                }
                debugger;
                var vCelular = $('#txtCelular').val();
                var vTelefono = $('#txtTelefono').val();
                var vDireccion = $('#txtDireccion').val();

                var vIdPuesto = $('#SelectedPuestoId').val();
                if (vIdPuesto == 0) {
                    WarningMessage("Debe seleccionar un puesto");
                    return;
                }

                var vEmail = $('#txtEmail').val();

                //if (vIdPuesto == "1" && vEmail.length == 0) {
                //    WarningMessage("Debe ingresar el número de Brevete");
                //    return;
                //}              

                var vRutaImgDni = $('#input_folder_Dni').val();
                var vRutaImgDomiciliaria = $('#input-folder-Domiciliaria').val();
                var vRutaImgPenales = $('#input-folder-Penales').val();
                var vRutaImgPoliciales = $('#input-folder-Policiales').val();
                var vRutaImgtitulo = $('#input-folder-Titulo').val();

                //var flDni = (DateTime.Now.ToString("yyyyMMddHHmmss") + "-" + file.FileName).ToLower();
                //file.SaveAs(Server.MapPath("~/Uploads/" + flDni));

                switch (vIdPuesto) {
                    case 1:
                        var vImgDni = $('#input_folder_Dni').val();
                        if (vImgDni == "" && vImgDni != "No archivo") {
                            WarningMessage("Debe de subir una copia del DNI");
                            return;
                        }
                        break;
                    case 2:
                        var vCelular = $('#txtCelular').val();
                        break;
                    case 3:
                        var vCelular = $('#txtCelular').val();
                        break;
                    case 4:
                        var vCelular = $('#txtCelular').val();
                        break;
                }

                //var formData = new FormData();
                //formData.append('file', $('#input_folder_Dni')[0].files[0]);

                var formData = new FormData();
                var totalFiles = document.getElementById("input_folder_Dni").files.length;
                for (var i = 0; i < totalFiles; i++)
                {
                    var file = document.getElementById("input_folder_Dni").files[i];

                    formData.append("FileUpload", file);
                }

                //////$.ajax({
                //////    type: "POST",
                //////    url: "/VerificarDocumentacion/Upload",
                //////    data: formData,
                //////    dataType: 'json',
                //////    contentType: false,
                //////    processData: false,
                //////    success: function (response) {
                //////        alert('succes!!');
                //////    },
                //////    error: function (error) {
                //////        alert("errror");
                //////    }
                //////});


                $.ajax({
                    url: "/VerificarDocumentacion/setContrato",
                    data: {
                        'pDni': vDni, 'pNombre': vNombre, 'pApePaterno': vApellidoPaterno, 'pApeMaterno': vApellidoMaterno,
                        'pCelular': vCelular, 'pTelefono': vTelefono, 'pDireccion': vDireccion, 'pIdPuesto': vIdPuesto, 'pEmail': vEmail,
                        'pRutaImgDni': vRutaImgDni, 'pRutaImgDomiciliaria': vRutaImgDomiciliaria, 'pRutaImgPenales': vRutaImgPenales,
                        'pRutaImgPoliciales': vRutaImgPoliciales, 'pRutaImgtitulo': vRutaImgtitulo
                        },
                    async: false,
                    success: function (data) {
                        if (data) {
                            $("#btn-grabar").attr("disabled", "disabled");
                            WarningMessage("Se modifico contrato");
                        } else {
                            WarningMessage("No se realizo la modificaciones");
                        }
                    },
                    error: function (ex) {
                        console.log(ex);
                    },
                    complete: function (xhr, textStatus) {

                    }
                });



            });
        });

    </script>
}